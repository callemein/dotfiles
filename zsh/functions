# -- Functions -----------------------------------------------------------------

# Extract archive based on file type
# Taken from http://justinlilly.com/dotfiles/zsh.html
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}



brightness(){
  MON="eDP-1-1"    # Discover monitor name withv: xrandr | grep " connected"
  STEP=5          # Step Up/Down brightnes by: 5 = ".05", 10 = ".10", etc.

  CurrBright=$( xrandr --verbose --current | grep ^"$MON" -A5 | tail -n1 )
  CurrBright="${CurrBright##* }"  # Get brightness level with decimal place

  Left=${CurrBright%%"."*}        # Extract left of decimal point
  Right=${CurrBright#*"."}        # Extract right of decimal point

  MathBright="0"
  [[ "$Left" != 0 && "$STEP" -lt 10 ]] && STEP=10     # > 1.0, only .1 works
  [[ "$Left" != 0 ]] && MathBright="$Left"00          # 1.0 becomes "100"
  [[ "${#Right}" -eq 1 ]] && Right="$Right"0          # 0.5 becomes "50"
  MathBright=$(( MathBright + Right ))

  echo "$CurrBright / $MathBright"
  [[ "$1" == "Up" || "$1" == "+" ]] && MathBright=$(( MathBright + STEP ))
  [[ "$1" == "Down" || "$1" == "-" ]] && MathBright=$(( MathBright - STEP ))
  echo "$CurrBright / $MathBright"
  [[ "$MathBright" -lt 10 ]] && MathBright=10 # Negative not allowed
  [[ "$MathBright" -gt 99  ]] && MathBright=100      # Can't go over 9.99

  echo "$CurrBright / $MathBright"

  if [[ "${#MathBright}" -eq 3 ]] ; then
        MathBright="$MathBright"000         # Pad with lots of zeros
            CurrBright="${MathBright:0:1}.${MathBright:1:2}"
            else
                  MathBright="$MathBright"000         # Pad with lots of zeros
                      CurrBright=".${MathBright:0:2}"
                      fi

                      xrandr --output "$MON" --brightness "$CurrBright"   # Set new brightness
                      echo "$CurrBright / $MathBright"



}
